{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BudgetItem } from 'src/shared/models/budget-item.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AddItemFormComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Add\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddItemFormComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = (a0, a1) => ({\n  \"is-primary\": a0,\n  \"is-success\": a1\n});\nexport let AddItemFormComponent = /*#__PURE__*/(() => {\n  class AddItemFormComponent {\n    constructor() {\n      this.formSubmit = new EventEmitter();\n    }\n    ngOnInit() {\n      // if item has a value\n      if (this.item) {\n        // this means that an existing item object was passed into this component\n        // therefore this is not a new item\n        this.isNewItem = false;\n      } else {\n        this.isNewItem = true;\n        this.item = new BudgetItem('', null);\n      }\n    }\n    onSubmit(form) {\n      this.formSubmit.emit(form.value);\n      form.reset();\n    }\n    static #_ = this.ɵfac = function AddItemFormComponent_Factory(t) {\n      return new (t || AddItemFormComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddItemFormComponent,\n      selectors: [[\"app-add-item-form\"]],\n      inputs: {\n        item: \"item\"\n      },\n      outputs: {\n        formSubmit: \"formSubmit\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 9,\n      consts: [[3, \"ngSubmit\"], [\"itemForm\", \"ngForm\"], [1, \"field\", \"is-horizontal\"], [1, \"field-body\"], [1, \"field\", \"is-narrow\"], [1, \"control\"], [\"type\", \"number\", \"required\", \"\", \"name\", \"amount\", \"placeholder\", \"Amount\", 1, \"input\", 2, \"width\", \"100px\", 3, \"ngModel\"], [1, \"field\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"description\", \"placeholder\", \"Description\", 1, \"input\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"button\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\"]],\n      template: function AddItemFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r3 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddItemFormComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r3);\n            const _r0 = i0.ɵɵreference(1);\n            return i0.ɵɵresetView(ctx.onSubmit(_r0));\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"p\", 5);\n          i0.ɵɵelement(6, \"input\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"p\", 5);\n          i0.ɵɵelement(9, \"input\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"button\", 9);\n          i0.ɵɵtemplate(12, AddItemFormComponent_p_12_Template, 2, 0, \"p\", 10)(13, AddItemFormComponent_p_13_Template, 2, 0, \"p\", 10);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.item.amount);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.item.description);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, ctx.isNewItem, !ctx.isNewItem))(\"disabled\", !_r0.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isNewItem);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isNewItem);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, FormsModule, i2.NgModel, i2.NgForm]\n    });\n  }\n  return AddItemFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}